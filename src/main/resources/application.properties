spring.application.name=microserives-selenium-address
server.port=8801
server.servlet.context-path=/address-app/api


eureka.client.service-url.defaultZone=http://localhost:5000/eureka

## If we set it as ' * ', it will include '/info', '/health', '/metrics', '/threaddump', '/beans' 
management.endpoints.web.exposure.include=*
management.info.env.enabled=true
info.app.name=Address App
info.app.version=0.0.1
info.app.description=My First Actuator

## can have any key value pair under 'metadata-map'
eureka.instance.metadata-map.configPath=/address-app/api
eureka.instance.metadata-map.someExample=example

##default is 30 seconds
#eureka.instance.lease-renewal-interval-in-seconds=10
##default is 90 seconds
#eureka.instance.lease-expiration-duration-in-seconds=20


##DB configs start

##mysql
spring.datasource.url=jdbc:mysql://localhost:3306/employeeselenium
spring.datasource.username=root
spring.datasource.password=

##mssql
#spring.datasource.url= jdbc:sqlserver://localhost:1433;encrypt=true;trustServerCertificate=true;databaseName=tempdbs
#spring.datasource.username=sa
#spring.datasource.password=ss2024@fts1234
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.SQLServerDialect
##spring.datasource.driver-class-name=com.microsoft.sqlserver.jdbc.SQLServerDriver


#spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.format_sql=true

#This property controls whether the Hibernate session (connection to the database) remains open during the processing of an HTTP request. When set to true (default), the session stays open until the request is complete, potentially causing performance issues and memory leaks in certain scenarios.
#spring.jpa.open-in-view=false

##DB configs end